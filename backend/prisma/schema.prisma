// Prisma schema for SkillSwap

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SessionStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}

model User {
  id               String    @id @default(cuid())
  name             String
  email            String    @unique
  avatarUrl        String?
  bio              String?
  location         String?
  timeZone         String?
  credits          Int       @default(0)
  skillsOffered    Skill[]   @relation("SkillsOffered")
  skillsWanted     Skill[]   @relation("SkillsWanted")
  sessionsRequested Session[] @relation("SessionsRequested")
  sessionsHosted   Session[] @relation("SessionsHosted")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Skill {
  id          String   @id @default(cuid())
  name        String
  category    String
  description String?
  offeredBy   User     @relation("SkillsOffered", fields: [userId], references: [id])
  userId      String
  wantedBy    User?    @relation("SkillsWanted", fields: [wantedById], references: [id])
  wantedById  String?
  createdAt   DateTime @default(now())
}

model Session {
  id          String        @id @default(cuid())
  title       String
  description String?
  dateTime    DateTime
  status      SessionStatus
  user        User          @relation("SessionsRequested", fields: [userId], references: [id])
  userId      String
  host        User          @relation("SessionsHosted", fields: [hostId], references: [id])
  hostId      String
  feedback    String?
  rating      Int?
  createdAt   DateTime      @default(now())
} 